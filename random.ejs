<!doctype html>
<html lang = "en">
<head>
	<script src = "https://code.jquery.com/jquery-2.2.3.min.js" integrity="sha256-a23g1Nt4dtEYOj7bR+vTu7+T8VP13humZFBJNIYoEJo=" crossorigin="anonymous"></script>
	<script src = "/socket.io/socket.io.js"></script>
	<script>
	
		var socket = io();

		/* escape function */
		var entityMap = {
		"&": "&amp;",
		"<": "&lt;",
		">": "&gt;",
		'"': '&quot;',
		"'": '&#39;',
		"/": '&#x2F;',
		"\n":"<br>",
		"\r":"<br>",
		"\r\n":"<br>",
		"\t":"&nbsp;"
		};

		function escapeHtml(i){
			return String(i).replace(/\r\n|\r|\n|\&|\<|\>|\"|\'|\//g,function(s){
				return entityMap[s];
			});
		}

		/* parsing in [img] tags */
		function parsing_preview(i,h_id){
			var escaped_i = escapeHtml(i);
			//h_id = escapeHtml(h_id);
			var j = escaped_i.replace(/\[img.*?\]/g,function(s){
				return parsing_img(s,h_id);
			});
			
			var index = 0;
			var k = j.replace(/\[mcq .*?\]/g,function(s){
				index += 1;
				return parsing_mcq(index,s);
			});
			
			var l = k.replace(/\[su.*?\]/g,function(s){
				if(s.indexOf('sub')==1){
					s = s.replace(/\[sub /,'<sub>');
					s = s.replace(/\]$/,'</sub>')
				}
				if(s.indexOf('sup')==1){
					s = s.replace(/\[sup /,'<sup>');
					s = s.replace(/\]$/,'</sup>')
				}
				return s;
			});
			
			var m = l.replace(/\[space .*?\]/g,function(s){
				s = s.replace(/\[space |\]/g,'');
				ssplit = s.split(' ');
				return parsing_space(ssplit[0],ssplit[1]);
			})
			
			return m;
		}

		function parsing_mcq(i,s){
			var letter = String.fromCharCode(64 + i);
			var string = s.replace(/\[mcq |\]/g,'');
			return '<div class = "row"><div class = "col-md-2">'+letter+'</div><div class = "col-md-8">'+string+'</div></div>';
		}

		function parsing_img(i,h_id){
			var isplit = i.replace(/\[|\]/g,'').split(' ');
			var filename = isplit[0].substring(3,isplit[0].lastIndexOf('_'));
			var fileextension = isplit[0].substring(isplit[0].lastIndexOf('_')+1);
			var returnstring = '<img class = "col-md-12" src="img/'+ h_id +'/'+filename+'.'+fileextension+'">';
			
			returnstring = returnstring.slice(0,returnstring.indexOf(' style="'))+'>';
			if(i.replace(/\[|\]/g,'').split(' ').length>1){
				for(var j=0;j<i.replace(/\[|\]/g,'').split(' ').length;j++){
					var params = i.replace(/\[|\]/g,'').split(' ')[j].split('=');
					if(params.length<2){
						continue;
					}
					returnstring = concatstyle(returnstring,params);
				}
			}else{
				return returnstring;
			}
			return returnstring;
		}

		function parsing_space(num,type){
			if(!$.isNumeric(num)||(type!='lines'&&type!='blank'&&type!='box')){
				return '';
			}
			var returnstring = '<div class = "row">';
			for(var j=0;j<num;j++){
				returnstring += '<div class = "col-md-12 spaces_'+type+'"><h4>&nbsp;</h4></div>';
			}
			returnstring +='</div>';
			return returnstring;
		}

		function concatstyle(i,p){
			
			var r = '';
			var concatstring = '';
			
			switch(p[0]){
				case 'r':
					if(!$.isNumeric(p[1])){
						return i;
					}else{
						concatstring = 
							'-webkit-transform: rotate('+p[1]+'deg);'+
							'-moz-transform: rotate('+p[1]+'deg);'+
							'-o-transform: rotate('+p[1]+'deg);'+
							'-ms-transform: rotate('+p[1]+'deg);'+ 
							'transform: rotate('+p[1]+'deg);'
					}
				break;
				case 'w':
					if(!$.isNumeric(p[1])){
						return i;
					}else{
						concatstring = 'width:'+p[1]+'%'
					}
				break;
				default:
				break;
			}
			
			if(i.indexOf('style="')==-1){
				r=i.slice(0,i.length-1).concat(' style="'+concatstring+'">')
			}else{
				r=i.replace(' style="',' style="'+concatstring);
			}
			
			return r;
		}


		var arrQuestions = <%- arrQuestions %>
		$(document).ready(function(){
		
			var json = {}
			json.block0 = {}
			for (var i = 0; i<arrQuestions.length; i++){
				json.block0['question'+i]={}
				json.block0['question'+i].questionNumber = i+1
				json.block0['question'+i].questionMark = arrQuestions[i].mark
				$('#guinea').html(parsing_preview(arrQuestions[i].question,arrQuestions[i].hashed_id))
				
				json.block0['question'+i].questionBody = $('#guinea').html()
				json.options = {}
				json.options.noAnswer = true
			}
			socket.emit('make pdf',json,function(o){
				if(o.result=='success'){
					window.location.href = o.url
				}
			})
		
		})
	</script>
</head>
<body>
Your PDF is being generated. Please wait.
<div  id = "guinea">
</div>
</body>
</html>